<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
canmove = false;
depth = -y + room_height;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canmove &amp;&amp; !global.messenger){

    with(objHighlight){
        instance_destroy();
    }
    with(objTile){
        canmove = false;
    }
    
    //capture packet
    instance_create(x,y,objNetAnimation);
    if(x == objMessenger.x &amp;&amp; y == objMessenger.y) {
        objMessenger.visible = true;
        show_message("Knight wins!");
        //end game
    }else {
        objKnight.alarm[0] = 60;
    }
    scrSendTurn(2, x, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canmove){

    with(objHighlight){
        instance_destroy();
    }
    with(objTile){
        canmove = false;
    }
    
    if(global.messenger){
        //messenger move packet
        objMessenger.x = x;
        objMessenger.y = y;
        objMessenger.alarm[0] = 60;
        scrSendTurn(0, 0, 0);
    }else {
        with(objFootprint) {
            visible = false;
        }
        if(x == objKnight.x &amp;&amp; y == objKnight.y){ 
            //footprint packet
            var footprint;
            footprint[0] = instance_position(x, y, objFootprint);
            footprint[1] = instance_position(x - sprite_get_width(sprTile),y,objFootprint);
            footprint[2] = instance_position(x - sprite_get_width(sprTile)/2,y-3/4*sprite_get_height(sprTile),objFootprint);
            footprint[3] = instance_position(x + sprite_get_width(sprTile)/2,y-3/4*sprite_get_height(sprTile),objFootprint);
            footprint[4] = instance_position(x + sprite_get_width(sprTile),y,objFootprint);
            footprint[5] = instance_position(x + sprite_get_width(sprTile)/2,y+3/4*sprite_get_height(sprTile),objFootprint);
            footprint[6] = instance_position(x - sprite_get_width(sprTile)/2,y+3/4*sprite_get_height(sprTile),objFootprint);
            
            var i;
            for(i = 0; i &lt; 7; i++) {
                if(footprint[i] != noone) {
                    footprint[i].visible = true;
                }
            }
            
            objKnight.alarm[0] = 60;
            scrSendTurn(1, 0, 0);
        } else {
            //knight move packet
            objKnight.x = x;
            objKnight.y = y;
            objKnight.alarm[0] = 60;
            scrSendTurn(0, 0, 0);
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.start) {
    draw_self();
}
if(canmove){
//show_debug_message("can move");
    //draw_sprite(sprTileHighlight, 0, x, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
