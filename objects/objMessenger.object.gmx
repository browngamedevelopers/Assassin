<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMessenger</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turnnum = INIT_MESSENGER_TURNS;
image_speed = .05;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Turn

with(objFootprint) {
    event_user(0);
}

tile = instance_position(x, y, objTile);
if(tile.image_index == 6 || tile.image_index == 7) {
    show_message("Messenger wins!");
    //End game
} else if(tile.image_index != 2 &amp;&amp; tile.image_index != 3) {
    foot = instance_create(x, y, objFootprint);
    foot.footstepDuration++;
}

turnnum -= 1;
if(turnnum == 0){
    turnnum = MESSENGER_TURNS;
    scrSendTurnSwitch();
}else {
    //Tell surrounding tiles
    if(global.turn){
        var tile;
        tile[1] = instance_position(x - sprite_get_width(sprTile),y,objTile);
        tile[2] = instance_position(x - sprite_get_width(sprTile)/2,y-3/4*sprite_get_height(sprTile),objTile);
        tile[3] = instance_position(x + sprite_get_width(sprTile)/2,y-3/4*sprite_get_height(sprTile),objTile);
        tile[4] = instance_position(x + sprite_get_width(sprTile),y,objTile);
        tile[5] = instance_position(x + sprite_get_width(sprTile)/2,y+3/4*sprite_get_height(sprTile),objTile);
        tile[6] = instance_position(x - sprite_get_width(sprTile)/2,y+3/4*sprite_get_height(sprTile),objTile);
        
        for(i = 1; i &lt; 7; i++) {

            if(tile[i] != noone &amp;&amp; tile[i].image_index != 4 &amp;&amp; tile[i].image_index != 5
            &amp;&amp; !(tile[i].x == objKnight.x &amp;&amp; tile[i].y == objKnight.y)){
            //show_debug_message("yep!");
                tile[i].canmove = true;
                instance_create(tile[i].x, tile[i].y, objHighlight);
            }else {
            //show_debug_message("nope!");    
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.start &amp;&amp; visible) {
    draw_self();
    
    draw_set_color(c_black);
    draw_set_font(fntTextbox);
    if(global.messenger) {
        draw_text(x, y - sprite_height / 2 - 40, global.name);
    } else {
        draw_text(x, y - sprite_height / 2 - 40, global.otherName);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
