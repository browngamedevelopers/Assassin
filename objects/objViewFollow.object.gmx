<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.messenger) {
    x = objMessenger.x;
    y = objMessenger.y;
}else {
    x = objKnight.x;
    y = objKnight.y;
}
scrollspeed = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(global.messenger) {
    x = objMessenger.x;
    y = objMessenger.y;
}else {
    x = objKnight.x;
    y = objKnight.y;
}*/
mousex = mouse_x - view_xview;
mousey = mouse_y - view_yview;


if(keyboard_check(vk_left) || mousex &lt; 10 ) {
    x = max(view_wview[view_current]/2, x-scrollspeed);
}
if(keyboard_check(vk_right) || mousex &gt; view_wview[view_current] - 10) {
    x = min(room_width - view_wview[view_current]/2, x+scrollspeed);
}
if(keyboard_check(vk_up) || mousey &lt; 10) {
    y = max(view_hview[view_current]/2, y-scrollspeed);
}
if(keyboard_check(vk_down) || mousey &gt; view_hview[view_current] - 10) {
    y = min(room_height - view_hview[view_current]/2, y+scrollspeed);
}

if(mouse_wheel_up()) {
    view_hview[view_current] = max(view_hview[view_current] * .95, 384);
    view_wview[view_current] = max(view_wview[view_current] * .95, 512);
}
if(mouse_wheel_down()) {
    view_hview[view_current] = min(view_hview[view_current] * 1.1, 768);
    view_wview[view_current] = min(view_wview[view_current] * 1.1, 1024);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
